extern VOID NtGdiGetTextMetricsW(VOID);
extern HANDLE ZwGdiAddFontMemResourceEx(VOID);
extern VOID NtGdiRemoveFontMemResourceEx(VOID);

NTSTATUS(APIENTRY MyAddFontMemResourceEx) (PVOID pbFont, DWORD cbFont, PVOID pdv, DWORD* pcFonts) {
	ZwGdiAddFontMemResourceEx();
}

NTSTATUS(APIENTRY MyRemoveFontMemResourceEx) (HANDLE hFont) {
	NtGdiRemoveFontMemResourceEx();
}

NTSTATUS(APIENTRY MyGetTextMetricsW) (HDC hdc, DWORD pBuffer) {
	NtGdiGetTextMetricsW();
}

// Redefine Win32 function signatures. This is necessary because the output
// of GetProcAddressWithHash is cast as a function pointer.
typedef LPVOID(WINAPI *FuncVirtualAlloc) (
	_In_opt_  LPVOID lpAddress,
	_In_      SIZE_T dwSize,
	_In_      DWORD flAllocationType,
	_In_      DWORD flProtect
	);

typedef LRESULT(WINAPI *FuncDefWindowProcA) (
	_In_  HWND hWnd,
	_In_  UINT Msg,
	_In_  WPARAM wParam,
	_In_  LPARAM lParam
	);

typedef HWND(WINAPI *FuncCreateWindowExA) (
	_In_      DWORD dwExStyle,
	_In_opt_  LPCTSTR lpClassName,
	_In_opt_  LPCTSTR lpWindowName,
	_In_      DWORD dwStyle,
	_In_      int x,
	_In_      int y,
	_In_      int nWidth,
	_In_      int nHeight,
	_In_opt_  HWND hWndParent,
	_In_opt_  HMENU hMenu,
	_In_opt_  HINSTANCE hInstance,
	_In_opt_  LPVOID lpParam
	);

typedef BOOL(WINAPI *FuncDestroyWindow) (
	_In_  HWND hWnd
	);

typedef ATOM(WINAPI *FuncRegisterClassExA) (
	_In_  const WNDCLASSEX *lpwcx
	);

typedef HMODULE(WINAPI *FuncGetModuleHandleA) (
	_In_opt_  LPCTSTR lpModuleName
	);

typedef BOOL(WINAPI *FuncDeleteObject) (
	_In_  HGDIOBJ hObject
	);

typedef void(*Funcmemcpy) (
	void *dest,
	void *src,
	size_t count
	);

typedef LPVOID(WINAPI *Funcmalloc) (
	size_t size
	);

typedef HANDLE(WINAPI *FuncOpenProcess) (
	_In_  DWORD dwDesiredAccess,
	_In_  BOOL bInheritHandle,
	_In_  DWORD dwProcessId
	);

typedef LPVOID(WINAPI *FuncVirtualAllocEx) (
	_In_      HANDLE hProcess,
	_In_opt_  LPVOID lpAddress,
	_In_      SIZE_T dwSize,
	_In_      DWORD flAllocationType,
	_In_      DWORD flProtect
	);

typedef BOOL(WINAPI *FuncWriteProcessMemory) (
	_In_   HANDLE hProcess,
	_In_   LPVOID lpBaseAddress,
	_In_   LPCVOID lpBuffer,
	_In_   SIZE_T nSize,
	_Out_  SIZE_T *lpNumberOfBytesWritten
	);

typedef HANDLE(WINAPI *FuncCreateRemoteThread) (
	_In_   HANDLE hProcess,
	_In_   LPSECURITY_ATTRIBUTES lpThreadAttributes,
	_In_   SIZE_T dwStackSize,
	_In_   LPTHREAD_START_ROUTINE lpStartAddress,
	_In_   LPVOID lpParameter,
	_In_   DWORD dwCreationFlags,
	_Out_  LPDWORD lpThreadId
	);

typedef HACCEL(WINAPI *FuncCreateAcceleratorTableA) (
	_In_  LPACCEL lpaccl,
	_In_  int cEntries
	);

typedef BOOL(WINAPI *FuncDestroyAcceleratorTable) (
	_In_  HACCEL hAccel
	);

typedef int(__cdecl *FuncwsprintfA) (
	_Out_  LPTSTR lpOut,
	_In_   LPCTSTR lpFmt,
	_In_   ...
	);

typedef HDC(WINAPI *FuncCreateCompatibleDC) (
	_In_  HDC hdc
	);

typedef BOOL(WINAPI *FuncDeleteDC) (
	_In_  HDC hdc
	);

typedef NTSTATUS(__stdcall *FuncCreateDCompositionHwndTarget) (
	_In_   HANDLE hWnd,
	_In_   DWORD dwNum,
	_Out_  ULONGLONG pMem
	);

typedef NTSTATUS(__stdcall *FuncDestroyDCompositionHwndTarget) (
	_In_   HANDLE hWnd,
	_In_   DWORD dwNum
	);
